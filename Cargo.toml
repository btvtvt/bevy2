[package]
name = "bevy-server-client"
version = "0.1.0"
edition = "2024"

[dependencies]
async-std = "1.13.2"
# this not work in release build.
# the binary will require some dynamic library
# and have problem in docker container.
#bevy = { version = "0.17.2", features = ["dynamic_linking"] }

bevy = { version = "0.17.2" }
bevy_renet = "3.0.0"
renet = "=1.2.0"
renet_netcode = "1.2.0"
reqwest = { version = "0.12.23", features = ["blocking"] }

[[bin]]
name = "server"
path = "src/server/main.rs"

[[bin]]
name = "client"
path = "src/client/main.rs"

# Enable a small amount of optimization in the dev profile.
[profile.dev]
#opt-level = 1
opt-level = 0

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3



# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.wasm-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"



# for Linux
[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=lld"]

# for Windows
[target.x86_64-pc-windows-msvc]
linker = "rust-lld.exe"
